#!/usr/bin/env python3

import os
import subprocess
from os import path
import argparse

def printAndRun(cmd):
	print(' '.join(cmd))
	subprocess.call(cmd)

basedir = path.dirname(path.realpath(__file__))
event_listener_file = path.join(basedir, 'event-listener-lilysing.ly')
lilysing_file = path.join(basedir, 'lilysing.py')
mbrola_voice_file = path.join(basedir, 'us2')

parser = argparse.ArgumentParser()
parser.add_argument('input_file', type=str, help='LilyPond input file')
parser.add_argument('-d', '--debug', action='store_true', help="Don't delete intermediate .notes and .pho files")

args = parser.parse_args()

input_file = args.input_file

base_filename = path.splitext(input_file)[0]

# Remove all .notes files (event listener appends by default)
for name in next(os.walk('.'))[2]:
	if name.startswith(base_filename + '-') and name.endswith('.notes'):
		os.remove(name)

# Use the rarely used include-settings feature to include the event listener
printAndRun(['lilypond', '-dinclude-settings=' + event_listener_file, input_file])

# For each notes file, run lilysing.py and mbrola
wavfiles = []
for notes in next(os.walk('.'))[2]:
	if notes.startswith(base_filename + '-') and notes.endswith('.notes'):
		base = path.splitext(notes)[0]
		pho = base + '.pho'
		wav = base + '.wav'
		wavfiles.append(wav)
		printAndRun(['python3', lilysing_file, notes, pho])
		printAndRun(['mbrola', mbrola_voice_file, pho, wav])

printAndRun(['sox'] + [wav for wav in wavfiles] + ['--combine', 'merge', base_filename + '.wav'])

# Remove intermediary files
if not args.debug:
	exts = ('.notes', '.pho')

	for name in next(os.walk('.'))[2]:
		if name.startswith(base_filename + '-') and any([name.endswith(ext) for ext in exts]):
			os.remove(name)